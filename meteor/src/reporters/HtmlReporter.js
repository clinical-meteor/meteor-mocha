var ClientServerBaseReporter, HtmlReporter, MochaHtmlReporter, MochaRunner, ObjectLogger, log,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ObjectLogger = require("meteor/practicalmeteor:loglevel").ObjectLogger;

MochaHtmlReporter = require("./html");

ClientServerBaseReporter = require("./ClientServerBaseReporter");

MochaRunner = require("../lib/MochaRunner");

log = new ObjectLogger('HtmlReporter', 'info');

HtmlReporter = (function(superClass) {
  extend(HtmlReporter, superClass);

  function HtmlReporter(clientRunner, serverRunner, options) {
    this.clientRunner = clientRunner;
    this.serverRunner = serverRunner;
    this.options = options != null ? options : {};
    this.addReporterHtml = bind(this.addReporterHtml, this);
    try {
      log.enter('constructor');
      this.addReporterHtml();
      this.reporter = new MochaHtmlReporter(this.clientRunner);
      this.serverReporter = new MochaHtmlReporter(this.serverRunner, {
        elementIdPrefix: 'server-'
      });
      HtmlReporter.__super__.constructor.call(this, this.clientRunner, this.serverRunner, this.options);
    } finally {
      log["return"]();
    }
  }


  /*
    Adds the html required by the mocha HTML reporter to the body of the html
    document. We modified the mocha HTML reporter to be able to display 2 reporters
    at the same time, one for client tests and one for server tests.
    TODO: Create a single meteor reactive reporter.
   */

  HtmlReporter.prototype.addReporterHtml = function() {
    var div;
    try {
      log.enter("addReporterHtml");
      div = document.createElement('div');
      div.className = 'mocha-wrapper';
      div.innerHTML = '<div class="content"> <div class="test-wrapper"> <h1 class="title">Client tests</h1> <div id="mocha" class="mocha"></div> </div> <div class="divider"></div> <div class="test-wrapper"> <h1 class="title">Server tests</h1> <div id="server-mocha" class="mocha"></div> </div> </div>';
      return document.body.appendChild(div);
    } finally {
      log["return"]();
    }
  };

  return HtmlReporter;

})(ClientServerBaseReporter);

module.exports = HtmlReporter;

// ---
// generated by coffee-script 1.9.2
