var BaseReporter, JsonStreamReporter,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseReporter = require("./BaseReporter");

JsonStreamReporter = (function(superClass) {
  extend(JsonStreamReporter, superClass);

  function JsonStreamReporter(runner, options) {
    JsonStreamReporter.__super__.constructor.call(this, runner, options);
    this.runner.on('start', (function(_this) {
      return function(total) {
        return console.log(JSON.stringify([
          'start', {
            total: _this.stats.total
          }
        ]));
      };
    })(this));
    this.runner.on('pass', (function(_this) {
      return function(test) {
        return console.log(JSON.stringify(['pass', _this.clean(test)]));
      };
    })(this));
    this.runner.on('fail', (function(_this) {
      return function(test, err) {
        test = _this.clean(test);
        test.err = err.message;
        return console.log(JSON.stringify(['fail', test]));
      };
    })(this));
    this.runner.on('end', (function(_this) {
      return function() {
        return console.log(JSON.stringify(['end', _this.stats]));
      };
    })(this));
  }

  JsonStreamReporter.prototype.clean = function(test) {
    return {
      title: test.title,
      fullTitle: test.fullTitle(),
      duration: test.duration
    };
  };

  return JsonStreamReporter;

})(BaseReporter);

module.exports = JsonStreamReporter;

// ---
// generated by coffee-script 1.9.2
